<?xml version='1.0' encoding='UTF-8' standalone='yes' ?>
<tagfile doxygen_version="1.9.1">
  <compound kind="file">
    <name>NeuronDemo.h</name>
    <path>/home/jvegh/REPO/SystemC/NeuRipes/neuron/neurons/</path>
    <filename>NeuronDemo_8h.html</filename>
    <includes id="scGenComp__PU__Bio_8h" name="scGenComp_PU_Bio.h" local="yes" imported="no">scGenComp_PU_Bio.h</includes>
    <class kind="class">NeuronDemo</class>
  </compound>
  <compound kind="file">
    <name>NeuronPhysical.h</name>
    <path>/home/jvegh/REPO/SystemC/NeuRipes/neuron/neurons/</path>
    <filename>NeuronPhysical_8h.html</filename>
    <includes id="scGenComp__PU__Bio_8h" name="scGenComp_PU_Bio.h" local="yes" imported="no">scGenComp_PU_Bio.h</includes>
    <class kind="class">NeuronPhysical</class>
  </compound>
  <compound kind="file">
    <name>scGenComp_PU_Abstract.h</name>
    <path>/home/jvegh/REPO/SystemC/NeuRipes/neuron/neurons/</path>
    <filename>scGenComp__PU__Abstract_8h.html</filename>
    <class kind="class">scGenComp_PU_Abstract</class>
    <member kind="enumeration">
      <type></type>
      <name>GenCompPUObservingBits_t</name>
      <anchorfile>scGenComp__PU__Abstract_8h.html</anchorfile>
      <anchor>ace4ff5493a619c88d5cbc1407e5a96f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>gcob_ObserveGroup</name>
      <anchorfile>scGenComp__PU__Abstract_8h.html</anchorfile>
      <anchor>ace4ff5493a619c88d5cbc1407e5a96f9acb569bde19bb086f90bd94a65a2bbc2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>gcob_ObserveModule</name>
      <anchorfile>scGenComp__PU__Abstract_8h.html</anchorfile>
      <anchor>ace4ff5493a619c88d5cbc1407e5a96f9ac8dcecb2696002a99ab117251e6ebf0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>gcob_ObserveComputingBegin</name>
      <anchorfile>scGenComp__PU__Abstract_8h.html</anchorfile>
      <anchor>ace4ff5493a619c88d5cbc1407e5a96f9a7f8696fe71f6eebdd4396138eda379a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>gcob_ObserveComputingEnd</name>
      <anchorfile>scGenComp__PU__Abstract_8h.html</anchorfile>
      <anchor>ace4ff5493a619c88d5cbc1407e5a96f9a25729d4d34a42228dc32e2ead6e4e125</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>gcob_ObserveDeliveringBegin</name>
      <anchorfile>scGenComp__PU__Abstract_8h.html</anchorfile>
      <anchor>ace4ff5493a619c88d5cbc1407e5a96f9a04bb7a7b4f2b11c58ffa3991d38eddcf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>gcob_ObserveDeliveringEnd</name>
      <anchorfile>scGenComp__PU__Abstract_8h.html</anchorfile>
      <anchor>ace4ff5493a619c88d5cbc1407e5a96f9a27aaa7c018a526c0156b64eb5a91527f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>gcob_ObserveHeartbeat</name>
      <anchorfile>scGenComp__PU__Abstract_8h.html</anchorfile>
      <anchor>ace4ff5493a619c88d5cbc1407e5a96f9a0d8276045744c9c39ade1e0978337f59</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>gcob_ObserveInput</name>
      <anchorfile>scGenComp__PU__Abstract_8h.html</anchorfile>
      <anchor>ace4ff5493a619c88d5cbc1407e5a96f9aec81744120472b24e1429bdd6191edd7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>gcob_ObserveInitialize</name>
      <anchorfile>scGenComp__PU__Abstract_8h.html</anchorfile>
      <anchor>ace4ff5493a619c88d5cbc1407e5a96f9af0a9823a0785de078adc8fb295ea3133</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>gcob_ObserveRelaxingBegin</name>
      <anchorfile>scGenComp__PU__Abstract_8h.html</anchorfile>
      <anchor>ace4ff5493a619c88d5cbc1407e5a96f9ab44652178bf179047d99f89882623835</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>gcob_ValueChanged</name>
      <anchorfile>scGenComp__PU__Abstract_8h.html</anchorfile>
      <anchor>ace4ff5493a619c88d5cbc1407e5a96f9af10fe25009d97e53e71383bc9ed127fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>GenCompStageMachineType_t</name>
      <anchorfile>scGenComp__PU__Abstract_8h.html</anchorfile>
      <anchor>a2a131f305e5c73c0b10623b703c5861f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>gcsm_Sleeping</name>
      <anchorfile>scGenComp__PU__Abstract_8h.html</anchorfile>
      <anchor>a2a131f305e5c73c0b10623b703c5861fad615be241ea3016b37bf48b19c6677b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>gcsm_Relaxing</name>
      <anchorfile>scGenComp__PU__Abstract_8h.html</anchorfile>
      <anchor>a2a131f305e5c73c0b10623b703c5861faada55d261ae46fc909b79a2c190d2605</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>gcsm_Computing</name>
      <anchorfile>scGenComp__PU__Abstract_8h.html</anchorfile>
      <anchor>a2a131f305e5c73c0b10623b703c5861fa99e7e21f54e1d1c2951603894dc8de57</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>gcsm_Delivering</name>
      <anchorfile>scGenComp__PU__Abstract_8h.html</anchorfile>
      <anchor>a2a131f305e5c73c0b10623b703c5861faba5a1641743b4e6b2c1f70a299ed5fa2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>gcsm_Initializing</name>
      <anchorfile>scGenComp__PU__Abstract_8h.html</anchorfile>
      <anchor>a2a131f305e5c73c0b10623b703c5861fa300b4a3c38ad6b17b52e049ab8b79564</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>gcsm_InputReceived</name>
      <anchorfile>scGenComp__PU__Abstract_8h.html</anchorfile>
      <anchor>a2a131f305e5c73c0b10623b703c5861fab2cd713a498dfed6d82126c9906de453</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>gcsm_Synchronizing</name>
      <anchorfile>scGenComp__PU__Abstract_8h.html</anchorfile>
      <anchor>a2a131f305e5c73c0b10623b703c5861fac070cc97d512987ad9904607cd5d570c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>gcsm_Failed</name>
      <anchorfile>scGenComp__PU__Abstract_8h.html</anchorfile>
      <anchor>a2a131f305e5c73c0b10623b703c5861fa029b5a44eb55d8a1a82c8f6945ad9e6d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>scGenComp_PU_Bio.h</name>
    <path>/home/jvegh/REPO/SystemC/NeuRipes/neuron/neurons/</path>
    <filename>scGenComp__PU__Bio_8h.html</filename>
    <includes id="scGenComp__PU__Abstract_8h" name="scGenComp_PU_Abstract.h" local="yes" imported="no">scGenComp_PU_Abstract.h</includes>
    <class kind="class">scGenComp_PU_Bio</class>
  </compound>
  <compound kind="file">
    <name>scGenComp_PU_Tech.h</name>
    <path>/home/jvegh/REPO/SystemC/NeuRipes/neuron/neurons/</path>
    <filename>scGenComp__PU__Tech_8h.html</filename>
    <includes id="scGenComp__PU__Abstract_8h" name="scGenComp_PU_Abstract.h" local="yes" imported="no">scGenComp_PU_Abstract.h</includes>
    <class kind="class">scGenComp_PU_Tech</class>
  </compound>
  <compound kind="class">
    <name>EVENT_GenComp_type</name>
    <filename>classEVENT__GenComp__type.html</filename>
    <member kind="variable">
      <type>sc_core::sc_event</type>
      <name>ClockDown</name>
      <anchorfile>classEVENT__GenComp__type.html</anchorfile>
      <anchor>a3220954b31996ff928a234d6303de813</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sc_core::sc_event</type>
      <name>ClockUp</name>
      <anchorfile>classEVENT__GenComp__type.html</anchorfile>
      <anchor>a25f57f6fd9ae8362f33141ee3b7734e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sc_core::sc_event</type>
      <name>ComputingBegin</name>
      <anchorfile>classEVENT__GenComp__type.html</anchorfile>
      <anchor>a39d9b2e7cd97e1c7045675d39f038549</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sc_core::sc_event</type>
      <name>ComputingEnd</name>
      <anchorfile>classEVENT__GenComp__type.html</anchorfile>
      <anchor>a1fe15e708763da06957e3de9306107ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sc_core::sc_event</type>
      <name>DeliveringBegin</name>
      <anchorfile>classEVENT__GenComp__type.html</anchorfile>
      <anchor>a008aab59fe0ca7cb0562b93ce90ee950</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sc_core::sc_event</type>
      <name>DeliveringEnd</name>
      <anchorfile>classEVENT__GenComp__type.html</anchorfile>
      <anchor>af190e17bb8cf5038e5739cbdaa9b10ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sc_core::sc_event</type>
      <name>Failed</name>
      <anchorfile>classEVENT__GenComp__type.html</anchorfile>
      <anchor>a4f87442a8b728b6e550f6256ba4d07da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sc_core::sc_event</type>
      <name>Heartbeat</name>
      <anchorfile>classEVENT__GenComp__type.html</anchorfile>
      <anchor>ab92d80eda4a2164cd6ddcbf08c503486</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sc_core::sc_event</type>
      <name>Initialize</name>
      <anchorfile>classEVENT__GenComp__type.html</anchorfile>
      <anchor>a3993f24b879153a2b7c37c184b8ad5f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sc_core::sc_event</type>
      <name>InputReceived</name>
      <anchorfile>classEVENT__GenComp__type.html</anchorfile>
      <anchor>a639233d684b65b67ee5f406e09a8c3cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sc_core::sc_event</type>
      <name>RelaxingBegin</name>
      <anchorfile>classEVENT__GenComp__type.html</anchorfile>
      <anchor>a36a6c1d8148ff8a8d6afecec1daba54c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sc_core::sc_event</type>
      <name>Synchronize</name>
      <anchorfile>classEVENT__GenComp__type.html</anchorfile>
      <anchor>a87904adb5c42b68e2dc011cfa3d1a3d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sc_core::sc_event</type>
      <name>TransmissionBegin</name>
      <anchorfile>classEVENT__GenComp__type.html</anchorfile>
      <anchor>ab87a0146b3094d18d58c09373578c7a8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NeuronDemo</name>
    <filename>classNeuronDemo.html</filename>
    <base>scGenComp_PU_Bio</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Heartbeat_Computing_Do</name>
      <anchorfile>classNeuronDemo.html</anchorfile>
      <anchor>a968f505fae12f7408930e79b117e61d2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Heartbeat_Computing_Stop</name>
      <anchorfile>classNeuronDemo.html</anchorfile>
      <anchor>aab4c43c084329cbc1de7975eed5c992f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Heartbeat_Delivering_Do</name>
      <anchorfile>classNeuronDemo.html</anchorfile>
      <anchor>a7b536da8e59b248fb2c9b8cd7ec6cfa7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Heartbeat_Delivering_Stop</name>
      <anchorfile>classNeuronDemo.html</anchorfile>
      <anchor>a679dac13f103ce4140dc46b058f2fb82</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Heartbeat_Relaxing_Do</name>
      <anchorfile>classNeuronDemo.html</anchorfile>
      <anchor>a233a6008741bddf772d89a6211854329</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Heartbeat_Relaxing_Stop</name>
      <anchorfile>classNeuronDemo.html</anchorfile>
      <anchor>a2d7f92be89e33e11e63bcab6f7e0760d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Initialize_Do</name>
      <anchorfile>classNeuronDemo.html</anchorfile>
      <anchor>ad115de52a3a36b827e4f5cbc639b2016</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>InputReceived_Do</name>
      <anchorfile>classNeuronDemo.html</anchorfile>
      <anchor>a6b1fa359d1a0d044e2d53e688af5a28f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>NeuronDemo</name>
      <anchorfile>classNeuronDemo.html</anchorfile>
      <anchor>abac2ed1cc582eadad03d0c2db364e5d9</anchor>
      <arglist>(sc_core::sc_module_name nm)</arglist>
    </member>
    <docanchor file="classNeuronDemo.html">fig_AP_ConceptualDemo</docanchor>
  </compound>
  <compound kind="class">
    <name>NeuronPhysical</name>
    <filename>classNeuronPhysical.html</filename>
    <base>scGenComp_PU_Bio</base>
    <member kind="function">
      <type>float</type>
      <name>AxonTimeDerivative_Get</name>
      <anchorfile>classNeuronPhysical.html</anchorfile>
      <anchor>a8574ba27efd4e084f9691ac594a1755a</anchor>
      <arglist>(float Delay)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Calculate_Do</name>
      <anchorfile>classNeuronPhysical.html</anchorfile>
      <anchor>a4de3701160dfcbc4cd2a60e8c8d01eef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Heartbeat_Computing_Do</name>
      <anchorfile>classNeuronPhysical.html</anchorfile>
      <anchor>a04fe9034e297048c272cd07cc9fa57d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Heartbeat_Computing_Stop</name>
      <anchorfile>classNeuronPhysical.html</anchorfile>
      <anchor>a2275d5e03c547b06fe69fe2a529349d2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Heartbeat_Delivering_Do</name>
      <anchorfile>classNeuronPhysical.html</anchorfile>
      <anchor>aa27870867ab7a0361692560ecc977e80</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Heartbeat_Delivering_Stop</name>
      <anchorfile>classNeuronPhysical.html</anchorfile>
      <anchor>a03aafa632cd215a7052225ebfe0bd753</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Heartbeat_Relaxing_Do</name>
      <anchorfile>classNeuronPhysical.html</anchorfile>
      <anchor>ac48743aec7a1bf415eccf55e2b84cba5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Heartbeat_Relaxing_Stop</name>
      <anchorfile>classNeuronPhysical.html</anchorfile>
      <anchor>a535cedb66c2d5f7da379f007ee0774de</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Initialize_Do</name>
      <anchorfile>classNeuronPhysical.html</anchorfile>
      <anchor>a1ff47ab959c01f24b977de58887dfa19</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>InputReceived_Do</name>
      <anchorfile>classNeuronPhysical.html</anchorfile>
      <anchor>ad806dc719dded5aad7e2890cc533c7e3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>MembraneRushinTimeDerivative_Get</name>
      <anchorfile>classNeuronPhysical.html</anchorfile>
      <anchor>a66d025a8f935cf02a765b871c947ff64</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>NeuronPhysical</name>
      <anchorfile>classNeuronPhysical.html</anchorfile>
      <anchor>a19c07d130f56dc9873315446620d0a9a</anchor>
      <arglist>(sc_core::sc_module_name nm)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>scGenComp_PU_Abstract</name>
    <filename>classscGenComp__PU__Abstract.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>ComputingBegin_Do</name>
      <anchorfile>classscGenComp__PU__Abstract.html</anchorfile>
      <anchor>a0b20c8e983988e41e0219d1795e7f544</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>ComputingEnd_Do</name>
      <anchorfile>classscGenComp__PU__Abstract.html</anchorfile>
      <anchor>a8dbcf9d60a0005296f39182e5e24e8c9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>DeliveringBegin_Do</name>
      <anchorfile>classscGenComp__PU__Abstract.html</anchorfile>
      <anchor>a93d28411e469803ab8e7f69750055eca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>DeliveringEnd_Do</name>
      <anchorfile>classscGenComp__PU__Abstract.html</anchorfile>
      <anchor>abfe1d3c9db30b5c838548011560db983</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Failed_Do</name>
      <anchorfile>classscGenComp__PU__Abstract.html</anchorfile>
      <anchor>aa9c63634db2b9237809d91f58878afd6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Initialize_Do</name>
      <anchorfile>classscGenComp__PU__Abstract.html</anchorfile>
      <anchor>ab2c49d8195b1e4310575eeac6b125ed6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>InputReceived_Do</name>
      <anchorfile>classscGenComp__PU__Abstract.html</anchorfile>
      <anchor>a81d1c32b732fc5063d0b8acff9e83b92</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ObserverNotify</name>
      <anchorfile>classscGenComp__PU__Abstract.html</anchorfile>
      <anchor>a7c2c7ebb19204b62dfd6685bf9e8aa6b</anchor>
      <arglist>(GenCompPUObservingBits_t ObservedBit)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ObservingBit_Get</name>
      <anchorfile>classscGenComp__PU__Abstract.html</anchorfile>
      <anchor>ab90c619a3f1590de412951f7779eb3f7</anchor>
      <arglist>(GenCompPUObservingBits_t B)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ObservingBit_Set</name>
      <anchorfile>classscGenComp__PU__Abstract.html</anchorfile>
      <anchor>a41b67be264aac20b2b9ff16ba1d240f1</anchor>
      <arglist>(GenCompPUObservingBits_t B, bool V)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>OperationCounter_Get</name>
      <anchorfile>classscGenComp__PU__Abstract.html</anchorfile>
      <anchor>a399d6568bedd90fcbf4f71f9a06b3418</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>RelaxingBegin_Do</name>
      <anchorfile>classscGenComp__PU__Abstract.html</anchorfile>
      <anchor>a6bdceeb84580e09399748c015c862943</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>scGenComp_PU_Abstract</name>
      <anchorfile>classscGenComp__PU__Abstract.html</anchorfile>
      <anchor>a0aa91e8afabe518487562d5eadf76d96</anchor>
      <arglist>(sc_core::sc_module_name nm, sc_core::sc_time FixedComputingTime=sc_core::sc_time(SC_ZERO_TIME), sc_core::sc_time FixedDeliveringTime=sc_core::sc_time(SC_ZERO_TIME), bool ExternSynchronMode=false)</arglist>
    </member>
    <member kind="function">
      <type>sc_core::sc_time</type>
      <name>scIdlePeriod_Get</name>
      <anchorfile>classscGenComp__PU__Abstract.html</anchorfile>
      <anchor>a64ac131c1b5de05a7bd666613aeacce5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>sc_core::sc_time</type>
      <name>scProcessingPeriod_Get</name>
      <anchorfile>classscGenComp__PU__Abstract.html</anchorfile>
      <anchor>a5cb58143dab293baacd596fb91d6165f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>sc_core::sc_time</type>
      <name>scRelaxingBeginTime_Get</name>
      <anchorfile>classscGenComp__PU__Abstract.html</anchorfile>
      <anchor>aef492ca3f9547b62d79c717f38db9705</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>sc_core::sc_time</type>
      <name>scResultPeriod_Get</name>
      <anchorfile>classscGenComp__PU__Abstract.html</anchorfile>
      <anchor>a7b4f47d7ab49516c5734f87c15a20014</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>CancelEvents</name>
      <anchorfile>classscGenComp__PU__Abstract.html</anchorfile>
      <anchor>a38f2debfaecadef6052ef85421ca68dd</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>CentralClockMode_Get</name>
      <anchorfile>classscGenComp__PU__Abstract.html</anchorfile>
      <anchor>af41be214b51f9800604d9e5264c15d04</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>HaveEnoughInputs</name>
      <anchorfile>classscGenComp__PU__Abstract.html</anchorfile>
      <anchor>a390c9a8f987106b8a55b3a3c168389fb</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>Heartbeat_Computing_Do</name>
      <anchorfile>classscGenComp__PU__Abstract.html</anchorfile>
      <anchor>af93f673da1a0605463ebe7c472ee061f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>Heartbeat_Computing_Stop</name>
      <anchorfile>classscGenComp__PU__Abstract.html</anchorfile>
      <anchor>a75a0b61f9272fd7bf14413ecfdd9bbcb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>Heartbeat_Delivering_Do</name>
      <anchorfile>classscGenComp__PU__Abstract.html</anchorfile>
      <anchor>ac6b3b05527c3559773621b905430542f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>Heartbeat_Delivering_Stop</name>
      <anchorfile>classscGenComp__PU__Abstract.html</anchorfile>
      <anchor>abfae7ba4b9ea1f5aacab5ad7cb770bc7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>Heartbeat_Relaxing_Do</name>
      <anchorfile>classscGenComp__PU__Abstract.html</anchorfile>
      <anchor>a0a827655bc1a3e0affd9f3e4c28d4d27</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>Heartbeat_Relaxing_Stop</name>
      <anchorfile>classscGenComp__PU__Abstract.html</anchorfile>
      <anchor>a5b5b64cf2b49a9f7246a2e92d550b42a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>sc_core::sc_time</type>
      <name>scLocalTime_Get</name>
      <anchorfile>classscGenComp__PU__Abstract.html</anchorfile>
      <anchor>a1597734717801f0f83ea29e030292b58</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>scLocalTimeBase_Set</name>
      <anchorfile>classscGenComp__PU__Abstract.html</anchorfile>
      <anchor>a9ded4eb17e053cfc1ba5be715d6b4e18</anchor>
      <arglist>(sc_core::sc_time T)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>StageFlag_Set</name>
      <anchorfile>classscGenComp__PU__Abstract.html</anchorfile>
      <anchor>a26ef4fdb89b0785c80ed62ca8252e0b5</anchor>
      <arglist>(GenCompStageMachineType_t S)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mCentralClockMode</name>
      <anchorfile>classscGenComp__PU__Abstract.html</anchorfile>
      <anchor>ad186e82d86f339001ff9db119ab93296</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>sc_core::sc_time</type>
      <name>mFixedComputingTime</name>
      <anchorfile>classscGenComp__PU__Abstract.html</anchorfile>
      <anchor>a0fd72a2b7c76176e533f18edc4c522b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>sc_core::sc_time</type>
      <name>mLocalTimeBase</name>
      <anchorfile>classscGenComp__PU__Abstract.html</anchorfile>
      <anchor>ac6bd366a8a5948db90a51fe7ee010be3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bitset&lt; gcob_Max &gt;</type>
      <name>mObservedBits</name>
      <anchorfile>classscGenComp__PU__Abstract.html</anchorfile>
      <anchor>ab8dc6533d5cb788ef2fe3c8bd73d6e8e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>scGenComp_PU_Bio</name>
    <filename>classscGenComp__PU__Bio.html</filename>
    <base>scGenComp_PU_Abstract</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>ComputingBegin_Do</name>
      <anchorfile>classscGenComp__PU__Bio.html</anchorfile>
      <anchor>a3e3d739688705d444a8c08af0c7ac80f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeliveringBegin_Do</name>
      <anchorfile>classscGenComp__PU__Bio.html</anchorfile>
      <anchor>a077027e13a678e6c052ec546ff6fab6f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeliveringEnd_Do</name>
      <anchorfile>classscGenComp__PU__Bio.html</anchorfile>
      <anchor>aca6ec8124f2e6af9414d9205444fa12b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Heartbeat_Computing_Do</name>
      <anchorfile>classscGenComp__PU__Bio.html</anchorfile>
      <anchor>a1aacf9b0909eacef11041a684e89bce0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Heartbeat_Delivering_Do</name>
      <anchorfile>classscGenComp__PU__Bio.html</anchorfile>
      <anchor>addfd1439704d3c808f86dbe674f417a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Heartbeat_Relaxing_Do</name>
      <anchorfile>classscGenComp__PU__Bio.html</anchorfile>
      <anchor>a64c6ee49fdeefd43550b27db1f596501</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>InputReceived_Do</name>
      <anchorfile>classscGenComp__PU__Bio.html</anchorfile>
      <anchor>a70cb7062ebb915a554588ac9e12d8436</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>scGenComp_PU_Bio</name>
      <anchorfile>classscGenComp__PU__Bio.html</anchorfile>
      <anchor>adfc554b0e22d4fec1a3dd64e3349d2ec</anchor>
      <arglist>(sc_core::sc_module_name nm)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>Initialize_Do</name>
      <anchorfile>classscGenComp__PU__Bio.html</anchorfile>
      <anchor>ae8acab11afcb1db4025b4627708135ef</anchor>
      <arglist>()</arglist>
    </member>
    <docanchor file="classscGenComp__PU__Bio.html">NeuronStateMachine</docanchor>
  </compound>
  <compound kind="class">
    <name>scGenComp_PU_Tech</name>
    <filename>classscGenComp__PU__Tech.html</filename>
    <base>scGenComp_PU_Abstract</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>InputReceived_Do</name>
      <anchorfile>classscGenComp__PU__Tech.html</anchorfile>
      <anchor>a71aa186a1ca361e0482c97c94a1eba09</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>ProcessingBegin_Do</name>
      <anchorfile>classscGenComp__PU__Tech.html</anchorfile>
      <anchor>aad3483c950a29c8ff494e8d240197db3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>RelaxingBegin_Do</name>
      <anchorfile>classscGenComp__PU__Tech.html</anchorfile>
      <anchor>ad35d414ff65a13afbe9239c5dd762171</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>RelaxingEnd_Do</name>
      <anchorfile>classscGenComp__PU__Tech.html</anchorfile>
      <anchor>a525f1a0b171b60f29f75137484e08010</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>scGenComp_PU_Tech</name>
      <anchorfile>classscGenComp__PU__Tech.html</anchorfile>
      <anchor>adb08d00233a673eeba659ad8dd12c89e</anchor>
      <arglist>(sc_core::sc_module_name nm, sc_core::sc_time FixedComputingTime=sc_core::sc_time(SC_ZERO_TIME), sc_core::sc_time FixedDeliveringTime=sc_core::sc_time(SC_ZERO_TIME), bool ExternSynchronMode=false)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>Heartbeat_Delivering_Do</name>
      <anchorfile>classscGenComp__PU__Tech.html</anchorfile>
      <anchor>a75d20dea2abcb54608ae915daf55285b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>Heartbeat_Processing_Do</name>
      <anchorfile>classscGenComp__PU__Tech.html</anchorfile>
      <anchor>a64acaf17de4c9cba14a004501d7eb12d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>Heartbeat_Ready_Do</name>
      <anchorfile>classscGenComp__PU__Tech.html</anchorfile>
      <anchor>ae39b0e94e08a2989b39ad446f2697273</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>Heartbeat_Relaxing_Do</name>
      <anchorfile>classscGenComp__PU__Tech.html</anchorfile>
      <anchor>a8386d5e694f6ebc9cbdad53605a11669</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>Initialize_Do</name>
      <anchorfile>classscGenComp__PU__Tech.html</anchorfile>
      <anchor>ad847e79c942ca027bbe849a97553c4fa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>Processing_Finished</name>
      <anchorfile>classscGenComp__PU__Tech.html</anchorfile>
      <anchor>a70a6fd8151946a001c187b2e4d6ffd2f</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>MODELING</name>
    <title>MODELING abstract neurons</title>
    <filename>group__MODELING.html</filename>
    <subgroup>MODELING_SINGLE</subgroup>
    <subgroup>MODELING_MULTIPLE</subgroup>
    <page>group__MODELING</page>
  </compound>
  <compound kind="group">
    <name>PHYSICS</name>
    <title>PHYSICS behind neuronal operation</title>
    <filename>group__PHYSICS.html</filename>
    <subgroup>PHYSICS_NOTIONS</subgroup>
    <subgroup>PHYSICS_MEASURING</subgroup>
    <page>group__PHYSICS</page>
  </compound>
  <compound kind="group">
    <name>INFORMATION</name>
    <title>INFORMATION generalized for biology</title>
    <filename>group__INFORMATION.html</filename>
    <subgroup>INFORMATION_BASICS</subgroup>
  </compound>
  <compound kind="group">
    <name>COMPUTING</name>
    <title>COMPUTING generalized for biology</title>
    <filename>group__COMPUTING.html</filename>
    <subgroup>COMPUTING_BASICS</subgroup>
    <page>group__COMPUTING</page>
  </compound>
  <compound kind="group">
    <name>MODELING_SINGLE_PHYSICAL</name>
    <title>Neuron&apos;s physics</title>
    <filename>group__MODELING__SINGLE__PHYSICAL.html</filename>
    <docanchor file="group__MODELING__SINGLE__PHYSICAL.html" title="Neuron&apos;s physics">MODELING_SINGLE_PHYSICAL</docanchor>
    <docanchor file="group__MODELING__SINGLE__PHYSICAL.html" title="Overview">MODELING_SINGLE_PHYSICAL_OVERVIEW</docanchor>
    <docanchor file="group__MODELING__SINGLE__PHYSICAL.html" title="Conceptual stages of operation">MODELING_SINGLE_PHYSICAL_CONCEPTUAL</docanchor>
  </compound>
  <compound kind="group">
    <name>MODELING_SINGLE_ION_CHANNEL</name>
    <title>Ion channel</title>
    <filename>group__MODELING__SINGLE__ION__CHANNEL.html</filename>
    <docanchor file="group__MODELING__SINGLE__ION__CHANNEL.html" title="Ion channel">MODELING_ION_CHANNEL</docanchor>
  </compound>
  <compound kind="group">
    <name>MODELING_SINGLE_MEMBRANE</name>
    <title>Membrane</title>
    <filename>group__MODELING__SINGLE__MEMBRANE.html</filename>
    <docanchor file="group__MODELING__SINGLE__MEMBRANE.html" title="Modeling membrane">MODELING_SINGLE_MEMBRANE</docanchor>
    <docanchor file="group__MODELING__SINGLE__MEMBRANE.html" title="The rushed-in current">MODELING_SINGLE_MEMBRANE_RUSHEDIN</docanchor>
    <docanchor file="group__MODELING__SINGLE__MEMBRANE.html" title="The AIS outflow current">MODELING_SINGLE_MEMBRANE_AIS</docanchor>
    <docanchor file="group__MODELING__SINGLE__MEMBRANE.html" title="Synaptic currents and refractoriness">MODELING_SINGLE_MEMBRANE_SYNAPTIC</docanchor>
    <docanchor file="group__MODELING__SINGLE__MEMBRANE.html" title="The physical picture">MODELING_SINGLE_MEMBRANE_OTHER</docanchor>
    <docanchor file="group__MODELING__SINGLE__MEMBRANE.html" title="The neuronal condenser">MODELING_SINGLE_MEMBRANE_CONDENSER</docanchor>
    <docanchor file="group__MODELING__SINGLE__MEMBRANE.html" title="The true membrane current">MODELING_SINGLE_MEMBRANE_TRUE_CURRENT</docanchor>
  </compound>
  <compound kind="group">
    <name>MODELING_SINGLE_AXON</name>
    <title>Axon</title>
    <filename>group__MODELING__SINGLE__AXON.html</filename>
    <docanchor file="group__MODELING__SINGLE__AXON.html" title="Modeling axon">MODELING_SINGLE_AXON</docanchor>
    <docanchor file="group__MODELING__SINGLE__AXON.html" title="Modeling clamping">MODELING_SINGLE_AXON_CLAMPING</docanchor>
    <docanchor file="group__MODELING__SINGLE__AXON.html">Clamping_time_course </docanchor>
    <docanchor file="group__MODELING__SINGLE__AXON.html">fig_HH_Clamping_ON</docanchor>
    <docanchor file="group__MODELING__SINGLE__AXON.html">fig_HH_Clamping_OFF</docanchor>
    <docanchor file="group__MODELING__SINGLE__AXON.html" title="Gating the axonal current">MODELING_SINGLE_AXON_GATING</docanchor>
    <docanchor file="group__MODELING__SINGLE__AXON.html" title="Axonal-charge-delivery">AXONAL_CHARGE_DELIVERY</docanchor>
    <docanchor file="group__MODELING__SINGLE__AXON.html" title="Evaluation method matters">AXONAL_CHARGE_EVALUATION</docanchor>
    <docanchor file="group__MODELING__SINGLE__AXON.html">fig_FittingExperimentalData</docanchor>
    <docanchor file="group__MODELING__SINGLE__AXON.html">fig_SpeedDependence</docanchor>
    <docanchor file="group__MODELING__SINGLE__AXON.html" title="The Post-Synaptic Potential">MODELING_SINGLE_ELECTRIC_PSP</docanchor>
    <docanchor file="group__MODELING__SINGLE__AXON.html">fig_Post-synaptic_potential_lin</docanchor>
    <docanchor file="group__MODELING__SINGLE__AXON.html">HodgkinHuxleyStepFunction</docanchor>
  </compound>
  <compound kind="group">
    <name>MODELING_SINGLE_ELECTRIC</name>
    <title>Electric operation</title>
    <filename>group__MODELING__SINGLE__ELECTRIC.html</filename>
    <docanchor file="group__MODELING__SINGLE__ELECTRIC.html" title="Electric operation">MODELING_SINGLE_ELECTRIC</docanchor>
    <docanchor file="group__MODELING__SINGLE__ELECTRIC.html" title="Electronics&apos; view of neuronal membrane">ABSTRACT_ELECTRIC_NEURON</docanchor>
    <docanchor file="group__MODELING__SINGLE__ELECTRIC.html">StructureOfAIS</docanchor>
    <docanchor file="group__MODELING__SINGLE__ELECTRIC.html" title="Electric operation of neurons">MODELING_SINGLE_ELECTRIC_OPERATION</docanchor>
    <docanchor file="group__MODELING__SINGLE__ELECTRIC.html" title="Solving the integrator-type equation">MODELING_SINGLE_ELECTRIC_INTEGRATOR</docanchor>
    <docanchor file="group__MODELING__SINGLE__ELECTRIC.html" title="Solving the differentiator-type equation">MODELING_SINGLE_ELECTRIC_DIFFERENTIATOR</docanchor>
    <docanchor file="group__MODELING__SINGLE__ELECTRIC.html" title="Patching current">MODELING_SINGLE_ELECTRIC_DIFFERENTIATOR_PATCHING</docanchor>
    <docanchor file="group__MODELING__SINGLE__ELECTRIC.html" title="Clamping current">MODELING_SINGLE_ELECTRIC_DIFFERENTIATOR_CLAMPING</docanchor>
    <docanchor file="group__MODELING__SINGLE__ELECTRIC.html" title="AIS current">MODELING_SINGLE_ELECTRIC_DIFFERENTIATOR_AIS</docanchor>
    <docanchor file="group__MODELING__SINGLE__ELECTRIC.html" title="Synaptic and rushed-in current">MODELING_SINGLE_ELECTRIC_DIFFERENTIATOR_PSP</docanchor>
    <docanchor file="group__MODELING__SINGLE__ELECTRIC.html" title="Simple delivering">MODELING_SINGLE_ELECTRIC_DIFFERENTIATOR_SIMPLE</docanchor>
    <docanchor file="group__MODELING__SINGLE__ELECTRIC.html">fig_PSP_Derivative</docanchor>
    <docanchor file="group__MODELING__SINGLE__ELECTRIC.html" title="Complex case">MODELING_SINGLE_ELECTRIC_DIFFERENTIATOR_COMPLEX</docanchor>
    <docanchor file="group__MODELING__SINGLE__ELECTRIC.html" title="Currents in different stages">MODELING_SINGLE_ELECTRIC_STAGES</docanchor>
    <docanchor file="group__MODELING__SINGLE__ELECTRIC.html" title="The biological oscillator">MODELING_SINGLE_OSCILLATOR</docanchor>
    <docanchor file="group__MODELING__SINGLE__ELECTRIC.html">fig_The-ghost-image_AP</docanchor>
  </compound>
  <compound kind="group">
    <name>MODELING_SINGLE_AP</name>
    <title>Action potential</title>
    <filename>group__MODELING__SINGLE__AP.html</filename>
    <docanchor file="group__MODELING__SINGLE__AP.html" title="Modeling Action Potential">MODELING_ACTION_POTENTIAL</docanchor>
    <docanchor file="group__MODELING__SINGLE__AP.html" title="The conceptual model of Action Potential">MODELING_SINGLE_AP_CONCEPTUAL</docanchor>
    <docanchor file="group__MODELING__SINGLE__AP.html" title="Stages of generating Action Potential">MODELING_SINGLE_AP_STAGES</docanchor>
    <docanchor file="group__MODELING__SINGLE__AP.html">fig_AP_Conceptual</docanchor>
    <docanchor file="group__MODELING__SINGLE__AP.html" title="Creating an AP">MODELING_SINGLE_AP_CREATING</docanchor>
    <docanchor file="group__MODELING__SINGLE__AP.html" title="Synaptic control">MODELING_SINGLE_AP_SYNAPTIC</docanchor>
    <docanchor file="group__MODELING__SINGLE__AP.html" title="Artificial charge input">MODELING_SINGLE_AP_ARTIFICIAL</docanchor>
    <docanchor file="group__MODELING__SINGLE__AP.html" title="Variety of Action Potentials">MODELING_SINGLE_AP_VARIETY</docanchor>
    <docanchor file="group__MODELING__SINGLE__AP.html">AP_Variety</docanchor>
    <docanchor file="group__MODELING__SINGLE__AP.html" title="Consequences of the concept">MODELING_SINGLE_AP_CONSEQUENCES</docanchor>
  </compound>
  <compound kind="group">
    <name>MODELING_SINGLE_ARTIFICIAL</name>
    <title>Artificial operating modes</title>
    <filename>group__MODELING__SINGLE__ARTIFICIAL.html</filename>
    <docanchor file="group__MODELING__SINGLE__ARTIFICIAL.html" title="Artificial operating modes">Modeling_SINGLE_ARTFICIAL</docanchor>
    <docanchor file="group__MODELING__SINGLE__ARTIFICIAL.html" title="Constant external current">Modeling_SINGLE_ARTFICIAL_CONSTANT</docanchor>
    <docanchor file="group__MODELING__SINGLE__ARTIFICIAL.html">fig_ArtificialCurrent_AP</docanchor>
  </compound>
  <compound kind="group">
    <name>MODELING_SINGLE_FALLACIES</name>
    <title>Fallacies</title>
    <filename>group__MODELING__SINGLE__FALLACIES.html</filename>
    <docanchor file="group__MODELING__SINGLE__FALLACIES.html" title="Modeling fallacies">MODELING_SINGLE_FALLACIES</docanchor>
    <docanchor file="group__MODELING__SINGLE__FALLACIES.html" title="Point-like neuron">MODELING_SINGLE_FALLACIES_POINTLIKE</docanchor>
    <docanchor file="group__MODELING__SINGLE__FALLACIES.html" title="Passive distributed membrane">MODELING_SINGLE_FALLACIES_PASSIVE</docanchor>
    <docanchor file="group__MODELING__SINGLE__FALLACIES.html" title="Membrane as a wrong isolator">MODELING_SINGLE_FALLACIES_LEAKING</docanchor>
    <docanchor file="group__MODELING__SINGLE__FALLACIES.html" title="&apos;Delayed rectifier&apos; current">MODELING_SINGLE_FALLACIES_K_CURRENT</docanchor>
    <docanchor file="group__MODELING__SINGLE__FALLACIES.html" title="Membrane refrectoriness">MODELING_NEURONAL_MEMBRANE_REFRACTORINESS</docanchor>
    <docanchor file="group__MODELING__SINGLE__FALLACIES.html" title="Membrane as low-pass filter">MODELING_SINGLE_FALLACIES_LOWPASSFILTER</docanchor>
  </compound>
  <compound kind="group">
    <name>MODELING_SINGLE_COMPARING</name>
    <title>Comparing to other models</title>
    <filename>group__MODELING__SINGLE__COMPARING.html</filename>
    <docanchor file="group__MODELING__SINGLE__COMPARING.html" title="Comparing our model to others">MODELING_SINGLE_COMPARING</docanchor>
    <docanchor file="group__MODELING__SINGLE__COMPARING.html" title="The Hodgkin-Huxley model">MODELING_SINGLE_HODGKIN_HUXLEY</docanchor>
  </compound>
  <compound kind="group">
    <name>MODELING_SINGLE_COMPUTING</name>
    <title>Computing aspects</title>
    <filename>group__MODELING__SINGLE__COMPUTING.html</filename>
    <docanchor file="group__MODELING__SINGLE__COMPUTING.html" title="Modeling neuronal and neural computing">Modeling_Neuronal</docanchor>
  </compound>
  <compound kind="group">
    <name>PHYSICS_INTRODUCTORY</name>
    <title>Introduction</title>
    <filename>group__PHYSICS__INTRODUCTORY.html</filename>
    <docanchor file="group__PHYSICS__INTRODUCTORY.html" title="Physical description of nature">PHYSICS_Description</docanchor>
  </compound>
  <compound kind="group">
    <name>PHYSICS_ABSTRACTION</name>
    <title>Abstractions</title>
    <filename>group__PHYSICS__ABSTRACTION.html</filename>
    <docanchor file="group__PHYSICS__ABSTRACTION.html" title="Abstractions and introductory">PHYSICS_ABSTRACTIONS</docanchor>
  </compound>
  <compound kind="group">
    <name>PHYSICS_SPEEDS</name>
    <title>Speeds</title>
    <filename>group__PHYSICS__SPEEDS.html</filename>
    <docanchor file="group__PHYSICS__SPEEDS.html" title="Speed in science">PHYSICS_SPEEDS</docanchor>
    <docanchor file="group__PHYSICS__SPEEDS.html" title="Finite-speed interactions">PHYSICS_SPEEDS_FINITE</docanchor>
    <docanchor file="group__PHYSICS__SPEEDS.html" title="Mixing interaction speeds">PHYSICS_SPEEDS_MIXING</docanchor>
  </compound>
  <compound kind="group">
    <name>PHYSICS_SLOW_CURRENT</name>
    <title>Slow current</title>
    <filename>group__PHYSICS__SLOW__CURRENT.html</filename>
    <docanchor file="group__PHYSICS__SLOW__CURRENT.html" title="Currents with different speed">PHYSICS_SLOW_CURRENT</docanchor>
  </compound>
  <compound kind="group">
    <name>PHYSICS_SPATIOTEMPORAL</name>
    <title>Spatiotemporal behavior</title>
    <filename>group__PHYSICS__SPATIOTEMPORAL.html</filename>
    <docanchor file="group__PHYSICS__SPATIOTEMPORAL.html" title="Spatiotemporal behavior">PHYSICS_SPATIOTEMPORAL</docanchor>
  </compound>
  <compound kind="group">
    <name>MEASURING_CURRENT</name>
    <title>Current vs charge</title>
    <filename>group__MEASURING__CURRENT.html</filename>
    <docanchor file="group__MEASURING__CURRENT.html" title="Current vs charge transfer">MEASURING_CURRENT</docanchor>
    <docanchor file="group__MEASURING__CURRENT.html" title="Electric MEASURING_CURRENT_OSCILLATOR">MEASURING_CURRENT_OSCILLATOR</docanchor>
  </compound>
  <compound kind="group">
    <name>PHYSICS_MEASURING_OSCILLATOR</name>
    <title>Electric oscillator</title>
    <filename>group__PHYSICS__MEASURING__OSCILLATOR.html</filename>
    <docanchor file="group__PHYSICS__MEASURING__OSCILLATOR.html" title="Electric oscillator">PHYSICS_MEASURING_OSCILLATOR</docanchor>
    <docanchor file="group__PHYSICS__MEASURING__OSCILLATOR.html">RC_circuits</docanchor>
    <docanchor file="group__PHYSICS__MEASURING__OSCILLATOR.html">RCIntegratorCircuit</docanchor>
    <docanchor file="group__PHYSICS__MEASURING__OSCILLATOR.html">RCDifferentiatorCircuit</docanchor>
  </compound>
  <compound kind="group">
    <name>PHYSICS_MEASURING_DELAY</name>
    <title>Delayed current</title>
    <filename>group__PHYSICS__MEASURING__DELAY.html</filename>
    <docanchor file="group__PHYSICS__MEASURING__DELAY.html" title="Delayed current">PHYSICS_DELAY</docanchor>
    <docanchor file="group__PHYSICS__MEASURING__DELAY.html">Clamping_On-Off</docanchor>
    <docanchor file="group__PHYSICS__MEASURING__DELAY.html">HH_Clamping</docanchor>
    <docanchor file="group__PHYSICS__MEASURING__DELAY.html">HodgkinHuxleyUI_Off</docanchor>
  </compound>
  <compound kind="group">
    <name>MEASURING_ELECTROLYTES</name>
    <title>Electrolytes</title>
    <filename>group__MEASURING__ELECTROLYTES.html</filename>
    <docanchor file="group__MEASURING__ELECTROLYTES.html" title="Electrolytes: a case study">MEASURING_ELECTROLITES</docanchor>
    <docanchor file="group__MEASURING__ELECTROLYTES.html" title="Clamping">MEASURING_ELECTROLITES_CLAMPING</docanchor>
    <docanchor file="group__MEASURING__ELECTROLYTES.html">Clamping_Voltages</docanchor>
    <docanchor file="group__MEASURING__ELECTROLYTES.html">fig_ClampingVoltageOn</docanchor>
    <docanchor file="group__MEASURING__ELECTROLYTES.html">fig_ClampingVoltageOff</docanchor>
    <docanchor file="group__MEASURING__ELECTROLYTES.html">fig_HodgkinHuxleyStepFunction</docanchor>
  </compound>
  <compound kind="group">
    <name>MEASURING_CONDUCTANCE</name>
    <title>Conductance</title>
    <filename>group__MEASURING__CONDUCTANCE.html</filename>
    <docanchor file="group__MEASURING__CONDUCTANCE.html" title="Conductance">MEASURING_CONDUCTANCE</docanchor>
  </compound>
  <compound kind="group">
    <name>COMPUTING_BASICS</name>
    <title>Computing basics</title>
    <filename>group__COMPUTING__BASICS.html</filename>
    <docanchor file="group__COMPUTING__BASICS.html" title="Computing - a generalization">COMPUTING</docanchor>
    <docanchor file="group__COMPUTING__BASICS.html" title="Computing and communication">COMPUTING_COMMUNICATION</docanchor>
    <docanchor file="group__COMPUTING__BASICS.html" title="Computing and information">COMPUTING_INFORMATION</docanchor>
    <docanchor file="group__COMPUTING__BASICS.html" title="Computing and information">COMPUTING_BIOLOGY</docanchor>
    <docanchor file="group__COMPUTING__BASICS.html" title="Computational modeling of neuronal membrane">MODELING_NEURONAL_MEMBRANE_COMPUTATIONAL</docanchor>
    <docanchor file="group__COMPUTING__BASICS.html">fig_NeuronStateMachine</docanchor>
  </compound>
  <compound kind="group">
    <name>INFORMATION_BASICS</name>
    <title>Information basics</title>
    <filename>group__INFORMATION__BASICS.html</filename>
    <docanchor file="group__INFORMATION__BASICS.html" title="Information - a generalization">INFPRMATION</docanchor>
  </compound>
  <compound kind="group">
    <name>SIMULATION</name>
    <title>SIMULATION principles and technology</title>
    <filename>group__SIMULATION.html</filename>
    <subgroup>SIMULATION_SYSTEMC</subgroup>
    <docanchor file="group__SIMULATION.html" title="NeuRipes&apos;s simulation method">NeuRipes_Simulation_MAIN</docanchor>
  </compound>
  <compound kind="group">
    <name>SIMULATION_SYSTEMC</name>
    <title>SystemC</title>
    <filename>group__SIMULATION__SYSTEMC.html</filename>
    <docanchor file="group__SIMULATION__SYSTEMC.html" title="SystemC, the background language and engine">SIMULATION_SYSTEMC</docanchor>
    <docanchor file="group__SIMULATION__SYSTEMC.html" title="Ripes Ripes_Simulator">Ripes_Simulator</docanchor>
    <docanchor file="group__SIMULATION__SYSTEMC.html" title="GTKWave simulator">GTKWave_Simulator</docanchor>
    <docanchor file="group__SIMULATION__SYSTEMC.html">fig_GTKWave_Screenshot</docanchor>
  </compound>
  <compound kind="group">
    <name>MODELING_SINGLE</name>
    <title>MODELING single abstract neuron</title>
    <filename>group__MODELING__SINGLE.html</filename>
    <subgroup>MODELING_SINGLE_PHYSICAL</subgroup>
    <subgroup>MODELING_SINGLE_ION_CHANNEL</subgroup>
    <subgroup>MODELING_SINGLE_MEMBRANE</subgroup>
    <subgroup>MODELING_SINGLE_AXON</subgroup>
    <subgroup>MODELING_SINGLE_ELECTRIC</subgroup>
    <subgroup>MODELING_SINGLE_AP</subgroup>
    <subgroup>MODELING_SINGLE_ARTIFICIAL</subgroup>
    <subgroup>MODELING_SINGLE_FALLACIES</subgroup>
    <subgroup>MODELING_SINGLE_COMPARING</subgroup>
    <subgroup>MODELING_SINGLE_COMPUTING</subgroup>
    <docanchor file="group__MODELING__SINGLE.html" title="Modeling a single neuron">MODELING_SINGLE_MAIN</docanchor>
    <docanchor file="group__MODELING__SINGLE.html">fig_NeuronElectricOperationSummary</docanchor>
  </compound>
  <compound kind="group">
    <name>MODELING_MULTIPLE</name>
    <title>MODELING multiple abstract neurons</title>
    <filename>group__MODELING__MULTIPLE.html</filename>
    <docanchor file="group__MODELING__MULTIPLE.html" title="Modeling multiple abstract neurons">MODELING_MULTIPLE_NEURONS</docanchor>
  </compound>
  <compound kind="group">
    <name>PHYSICS_NOTIONS</name>
    <title>PHYSICS notions and terms</title>
    <filename>group__PHYSICS__NOTIONS.html</filename>
    <subgroup>PHYSICS_INTRODUCTORY</subgroup>
    <subgroup>PHYSICS_ABSTRACTION</subgroup>
    <subgroup>PHYSICS_SPEEDS</subgroup>
    <subgroup>PHYSICS_SLOW_CURRENT</subgroup>
    <subgroup>PHYSICS_SPATIOTEMPORAL</subgroup>
  </compound>
  <compound kind="group">
    <name>PHYSICS_MEASURING</name>
    <title>MEASURING biological electricity</title>
    <filename>group__PHYSICS__MEASURING.html</filename>
    <subgroup>MEASURING_CURRENT</subgroup>
    <subgroup>PHYSICS_MEASURING_OSCILLATOR</subgroup>
    <subgroup>PHYSICS_MEASURING_DELAY</subgroup>
    <subgroup>MEASURING_ELECTROLYTES</subgroup>
    <subgroup>MEASURING_CONDUCTANCE</subgroup>
    <docanchor file="group__PHYSICS__MEASURING.html" title="Measuring electrical quantities">PHYSICS_MEASURING_MAIN</docanchor>
  </compound>
  <compound kind="group">
    <name>RELEASE_NOTES</name>
    <title>RELEASE_NOTES</title>
    <filename>group__RELEASE__NOTES.html</filename>
    <docanchor file="group__RELEASE__NOTES.html" title="General release notes">Release_Notes</docanchor>
  </compound>
  <compound kind="page">
    <name>GETTING_STARTED_PAGE</name>
    <title>Getting started</title>
    <filename>GETTING_STARTED_PAGE.html</filename>
    <docanchor file="GETTING_STARTED_PAGE.html" title="Getting started">GettingStarted</docanchor>
  </compound>
  <compound kind="page">
    <name>MODELING_MAIN_PAGE</name>
    <title>MODELING abstract neurons</title>
    <filename>group__MODELING.html</filename>
  </compound>
  <compound kind="page">
    <name>MODELING_SINGLE_MAIN_PAGE</name>
    <title>MODELING single abstract neuron</title>
    <filename>MODELING_SINGLE_MAIN_PAGE.html</filename>
  </compound>
  <compound kind="page">
    <name>MODELING_SINGLE_ABSTRACT_MEMBRANE_PAGE</name>
    <title>Neuron&apos;s physics</title>
    <filename>MODELING_SINGLE_ABSTRACT_MEMBRANE_PAGE.html</filename>
  </compound>
  <compound kind="page">
    <name>MODELING_SINGLE_ION_CHANNEL_PAGE</name>
    <title>Ion channel</title>
    <filename>MODELING_SINGLE_ION_CHANNEL_PAGE.html</filename>
  </compound>
  <compound kind="page">
    <name>MODELING_SINGLE_MEMBRANE_PAGE</name>
    <title>Membrane</title>
    <filename>MODELING_SINGLE_MEMBRANE_PAGE.html</filename>
  </compound>
  <compound kind="page">
    <name>MODELING_SINGLE_AXON_PAGE</name>
    <title>Axon</title>
    <filename>MODELING_SINGLE_AXON_PAGE.html</filename>
  </compound>
  <compound kind="page">
    <name>MODELING_SINGLE_ELECTRIC_PAGE</name>
    <title>Electric operation</title>
    <filename>MODELING_SINGLE_ELECTRIC_PAGE.html</filename>
  </compound>
  <compound kind="page">
    <name>MODELING_SINGLE_ACTION_POTENTIAL_PAGE</name>
    <title>Action potential</title>
    <filename>MODELING_SINGLE_ACTION_POTENTIAL_PAGE.html</filename>
  </compound>
  <compound kind="page">
    <name>MODELING_SINGLE_ABSTRACT_ARTIFICIAL_PAGE</name>
    <title>Artificial operating modes</title>
    <filename>MODELING_SINGLE_ABSTRACT_ARTIFICIAL_PAGE.html</filename>
  </compound>
  <compound kind="page">
    <name>MODELING_SINGLE_FALLACIES_PAGE</name>
    <title>Fallacies</title>
    <filename>MODELING_SINGLE_FALLACIES_PAGE.html</filename>
  </compound>
  <compound kind="page">
    <name>MODELING_SINGLE_COMPARING_PAGE</name>
    <title>Comparing to other models</title>
    <filename>MODELING_SINGLE_COMPARING_PAGE.html</filename>
  </compound>
  <compound kind="page">
    <name>MODELING_SINGLE_ABSTRACT_COMPUTING_PAGE</name>
    <title>Computing aspects</title>
    <filename>MODELING_SINGLE_ABSTRACT_COMPUTING_PAGE.html</filename>
  </compound>
  <compound kind="page">
    <name>MODELING_MULTIPLE_MAIN_PAGE</name>
    <title>MODELING multiple abstract neurons</title>
    <filename>MODELING_MULTIPLE_MAIN_PAGE.html</filename>
  </compound>
  <compound kind="page">
    <name>PHYSICS_MAIN_PAGE</name>
    <title>PHYSICS behind neuronal operation</title>
    <filename>group__PHYSICS.html</filename>
  </compound>
  <compound kind="page">
    <name>PHYSICS_BASICS_NOTIONS_PAGE</name>
    <title>PHYSICS basic notions</title>
    <filename>PHYSICS_BASICS_NOTIONS_PAGE.html</filename>
  </compound>
  <compound kind="page">
    <name>PHYSICS_INTRODUCTORY_PAGE</name>
    <title>Basic physics</title>
    <filename>PHYSICS_INTRODUCTORY_PAGE.html</filename>
  </compound>
  <compound kind="page">
    <name>PHYSICS_ABSTRACTIONS_PAGE</name>
    <title>Physics abstractions</title>
    <filename>PHYSICS_ABSTRACTIONS_PAGE.html</filename>
  </compound>
  <compound kind="page">
    <name>PHYSICS_SPEED_PAGE</name>
    <title>Interaction speeds in nature</title>
    <filename>PHYSICS_SPEED_PAGE.html</filename>
  </compound>
  <compound kind="page">
    <name>PHYSICS_SLOW_CURRENT_PAGE</name>
    <title>Slow current</title>
    <filename>PHYSICS_SLOW_CURRENT_PAGE.html</filename>
  </compound>
  <compound kind="page">
    <name>PHYSICS_SPATIOTEMPORAL_PAGE</name>
    <title>Spatiotemporal behavior</title>
    <filename>PHYSICS_SPATIOTEMPORAL_PAGE.html</filename>
  </compound>
  <compound kind="page">
    <name>PHYSICS_MEASURING_MAIN_PAGE</name>
    <title>MEASURING biological electricity</title>
    <filename>PHYSICS_MEASURING_MAIN_PAGE.html</filename>
  </compound>
  <compound kind="page">
    <name>MEASURING_CURRENT_PAGE</name>
    <title>Interpreting current</title>
    <filename>MEASURING_CURRENT_PAGE.html</filename>
  </compound>
  <compound kind="page">
    <name>PHYSICS_MEASURING_OSCILLATOR_PAGE</name>
    <title>Oscillators</title>
    <filename>PHYSICS_MEASURING_OSCILLATOR_PAGE.html</filename>
  </compound>
  <compound kind="page">
    <name>PHYSICS_MEASURING_DELAY_PAGE</name>
    <title>Delayed current</title>
    <filename>PHYSICS_MEASURING_DELAY_PAGE.html</filename>
  </compound>
  <compound kind="page">
    <name>MEASURING_ELECTROLITES_PAGE</name>
    <title>Electrolytes: a case study</title>
    <filename>MEASURING_ELECTROLITES_PAGE.html</filename>
  </compound>
  <compound kind="page">
    <name>MEASURING_CONDUCTANCE_PAGE</name>
    <title>Measuring conductance</title>
    <filename>MEASURING_CONDUCTANCE_PAGE.html</filename>
  </compound>
  <compound kind="page">
    <name>COMPUTING_MAIN_PAGE</name>
    <title>COMPUTING generalized for biology</title>
    <filename>group__COMPUTING.html</filename>
  </compound>
  <compound kind="page">
    <name>INFORMATION_MAIN_PAGE</name>
    <title>INFORMATION generalized for biology</title>
    <filename>INFORMATION_MAIN_PAGE.html</filename>
  </compound>
  <compound kind="page">
    <name>SIMULATION_MAIN_PAGE</name>
    <title>SIMULATION principles and technology</title>
    <filename>SIMULATION_MAIN_PAGE.html</filename>
  </compound>
  <compound kind="page">
    <name>ReleaseNotes</name>
    <title>Release notes and porting</title>
    <filename>ReleaseNotes.html</filename>
  </compound>
  <compound kind="page">
    <name>GLOSSARY</name>
    <title></title>
    <filename>GLOSSARY.html</filename>
    <docanchor file="GLOSSARY.html">TAC_Glossary</docanchor>
    <docanchor file="GLOSSARY.html" title="API">GLOSSARY_API</docanchor>
    <docanchor file="GLOSSARY.html" title="AI">GLOSSARY_AI</docanchor>
    <docanchor file="GLOSSARY.html" title="AIS">GLOSSARY_AIS</docanchor>
    <docanchor file="GLOSSARY.html" title="AP">GLOSSARY_AP</docanchor>
    <docanchor file="GLOSSARY.html" title="ANN">GLOSSARY_ANN</docanchor>
    <docanchor file="GLOSSARY.html" title="BASE">GLOSSARY_BASE</docanchor>
    <docanchor file="GLOSSARY.html" title="CLI">GLOSSARY_CLI</docanchor>
    <docanchor file="GLOSSARY.html" title="CNN">GLOSSARY_CNN</docanchor>
    <docanchor file="GLOSSARY.html" title="CNS">GLOSSARY_CNS</docanchor>
    <docanchor file="GLOSSARY.html" title="CPU">GLOSSARY_CPU</docanchor>
    <docanchor file="GLOSSARY.html" title="CW">GLOSSARY_CW</docanchor>
    <docanchor file="GLOSSARY.html" title="DMA">GLOSSARY_DMA</docanchor>
    <docanchor file="GLOSSARY.html" title="EM">GLOSSARY_EM</docanchor>
    <docanchor file="GLOSSARY.html" title="EMPA">GLOSSARY_EMPA</docanchor>
    <docanchor file="GLOSSARY.html" title="FIFO">GLOSSARY_FIFO</docanchor>
    <docanchor file="GLOSSARY.html" title="FPGA">GLOSSARY_FPGA</docanchor>
    <docanchor file="GLOSSARY.html" title="GUI">GLOSSARY_GUI</docanchor>
    <docanchor file="GLOSSARY.html" title="GPGPU">GLOSSARY_GPGPU</docanchor>
    <docanchor file="GLOSSARY.html" title="GPU">GLOSSARY_GPU</docanchor>
    <docanchor file="GLOSSARY.html" title="HDL">GLOSSARY_HDL</docanchor>
    <docanchor file="GLOSSARY.html" title="HPC">GLOSSARY_HPC</docanchor>
    <docanchor file="GLOSSARY.html" title="HPL">GLOSSARY_HPL</docanchor>
    <docanchor file="GLOSSARY.html" title="HPCG">GLOSSARY_HPCG</docanchor>
    <docanchor file="GLOSSARY.html" title="HW">GLOSSARY_HW</docanchor>
    <docanchor file="GLOSSARY.html" title="HThread">GLOSSARY_HThread</docanchor>
    <docanchor file="GLOSSARY.html" title="ID">GLOSSARY_ID</docanchor>
    <docanchor file="GLOSSARY.html" title="I/O">GLOSSARY_IO</docanchor>
    <docanchor file="GLOSSARY.html" title="ILP">GLOSSARY_ILP</docanchor>
    <docanchor file="GLOSSARY.html" title="IRQ">GLOSSARY_IRQ</docanchor>
    <docanchor file="GLOSSARY.html" title="ISA">GLOSSARY_ISA</docanchor>
    <docanchor file="GLOSSARY.html" title="MCP">GLOSSARY_MCP</docanchor>
    <docanchor file="GLOSSARY.html" title="mutex">GLOSSARY_mutex</docanchor>
    <docanchor file="GLOSSARY.html" title="NoC">GLOSSARY_NoC</docanchor>
    <docanchor file="GLOSSARY.html" title="OS">GLOSSARY_OS</docanchor>
    <docanchor file="GLOSSARY.html" title="PC">GLOSSARY_PC</docanchor>
    <docanchor file="GLOSSARY.html" title="PSP">GLOSSARY_PSP</docanchor>
    <docanchor file="GLOSSARY.html" title="PERF">GLOSSARY_PERF</docanchor>
    <docanchor file="GLOSSARY.html" title="PROC">GLOSSARY_PROC</docanchor>
    <docanchor file="GLOSSARY.html" title="PU">GLOSSARY_PU</docanchor>
    <docanchor file="GLOSSARY.html" title="RTL">GLOSSARY_RTL</docanchor>
    <docanchor file="GLOSSARY.html" title="SoC">GLOSSARY_SoC</docanchor>
    <docanchor file="GLOSSARY.html" title="QT">GLOSSARY_QT</docanchor>
    <docanchor file="GLOSSARY.html" title="Qt5">GLOSSARY_Qt5</docanchor>
    <docanchor file="GLOSSARY.html" title="SPA">GLOSSARY_SPA</docanchor>
    <docanchor file="GLOSSARY.html" title="SV">GLOSSARY_SV</docanchor>
    <docanchor file="GLOSSARY.html" title="SystemC">GLOSSARY_SystemC</docanchor>
    <docanchor file="GLOSSARY.html" title="splitter">GLOSSARY_splitter</docanchor>
    <docanchor file="GLOSSARY.html" title="SW">GLOSSARY_SW</docanchor>
    <docanchor file="GLOSSARY.html" title="TLP">GLOSSARY_TLP</docanchor>
    <docanchor file="GLOSSARY.html" title="TAC">GLOSSARY_TAC</docanchor>
    <docanchor file="GLOSSARY.html" title="TLM">GLOSSARY_TLM</docanchor>
  </compound>
  <compound kind="page">
    <name>index</name>
    <title>notitle</title>
    <filename>index.html</filename>
  </compound>
</tagfile>
